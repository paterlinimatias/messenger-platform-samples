<!DOCTYPE html>
<html>
<head>
  <title>Pedir Cabify</title>
  <!-- Include meta tag to ensure proper rendering and touch zooming -->
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Include jQuery Mobile stylesheets -->
  <link rel="stylesheet" href="https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css">

  <!-- Include the jQuery library -->
  <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>

  <!-- Include the jQuery Mobile library -->
  <script src="https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script>
  <meta charset="utf-8">
  <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">
  <style>
    #locationField, #controls {
      position: relative;
      width: 480px;
    }
    #autocomplete {
      position: absolute;
      top: 0px;
      left: 0px;
      width: 99%;
    }
    .label {
      text-align: right;
      font-weight: bold;
      width: 100px;
      color: #303030;
    }
    #address {
      border: 1px solid #000090;
      background-color: #f0f0ff;
      width: 480px;
      padding-right: 2px;
    }
    #address td {
      font-size: 10pt;
    }
    .field {
      width: 99%;
    }
    .slimField {
      width: 80px;
    }
    .wideField {
      width: 200px;
    }
    #locationField {
      height: 20px;
      margin-bottom: 2px;
    }
  </style>
</head>

<body>
<div id="locationField">
  <input id="autocomplete" placeholder="Enter your address"
         type="text"></input>
</div>

<table id="address">
  <tr>
    <td class="label">Street address</td>
    <td class="slimField"><input class="field" id="street_number"
                                 disabled="true"></input></td>
    <td class="wideField" colspan="2"><input class="field" id="route"
                                             disabled="true"></input></td>
  </tr>
  <tr>
    <td class="label">City</td>
    <!-- Note: Selection of address components in this example is typical.
         You may need to adjust it for the locations relevant to your app. See
         https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete-addressform
    -->
    <td class="wideField" colspan="3"><input class="field" id="locality"
                                             disabled="true"></input></td>
  </tr>
  <tr>
    <td class="label">State</td>
    <td class="slimField"><input class="field"
                                 id="administrative_area_level_1" disabled="true"></input></td>
    <td class="label">Zip code</td>
    <td class="wideField"><input class="field" id="postal_code"
                                 disabled="true"></input></td>
  </tr>
  <tr>
    <td class="label">Country</td>
    <td class="wideField" colspan="3"><input class="field"
                                             id="country" disabled="true"></input></td>
  </tr>
</table>

<div >
  <form>
    <fieldset data-role="controlgroup" data-mini="true">
      <legend>Destinos recientes:</legend>
      <input type="radio" name="radio-choice-v-2" id="radio-choice-v-2a" value="on" checked="checked">
      <label for="radio-choice-v-2a">Av. Paseo de la Reforma 222, Cuauhtemoc</label>
      <input type="radio" name="radio-choice-v-2" id="radio-choice-v-2b" value="off">
      <label for="radio-choice-v-2b">Rio Lerma 123, Cuauhtemoc</label>
      <input type="radio" name="radio-choice-v-2" id="radio-choice-v-2c" value="other">
      <label for="radio-choice-v-2c">Av. Masaryk 544, Polanco</label>
    </fieldset>
    <div align="center">
      <a href="#pagetwo"  class="ui-btn ui-corner-all  ui-btn-inline" onclick="informIssue();return false;">Terminar Reclamo</a>

    </div>
  </form>
</div>
<script>
  window.extAsyncInit = function() {

  };

  function informIssue() {
    MessengerExtensions.getUserID(function success(uids) {
      var psid = uids.psid;
//        var psid = 45673;
      var data = {psid: psid, action: 'inform_lost_item', address: 'direccion bla blabla'};
      $.ajax({
        type: "POST",
        url: '/inform_lost_item',
        success: function(){
          closeBrowser();
        },
        contentType: 'application/json',
        data: JSON.stringify(data),
        dataType: 'json'
      });
    }, function error(err, errorMessage) {
      // Error handling code
      alert('No podemos autenticarte en este momento');
    });
  }


  function closeBrowser() {
    MessengerExtensions.requestCloseBrowser(function success() {
    }, function error(err) {
    });
  }
</script>

<script>
  (function(d, s, id){
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) {return;}
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.com/en_US/messenger.Extensions.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'Messenger'));
</script>

<script>
  // This example displays an address form, using the autocomplete feature
  // of the Google Places API to help users fill in the information.

  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:
  // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

  var placeSearch, autocomplete;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name'
  };

  function initAutocomplete() {
    // Create the autocomplete object, restricting the search to geographical
    // location types.
    autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
      {types: ['geocode']});

    // When the user selects an address from the dropdown, populate the address
    // fields in the form.
    autocomplete.addListener('place_changed', fillInAddress);
  }

  function fillInAddress() {
    // Get the place details from the autocomplete object.
    var place = autocomplete.getPlace();

    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }

    // Get each component of the address from the place details
    // and fill the corresponding field on the form.
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        var val = place.address_components[i][componentForm[addressType]];
        document.getElementById(addressType).value = val;
      }
    }
  }

  // Bias the autocomplete object to the user's geographical location,
  // as supplied by the browser's 'navigator.geolocation' object.
  function geolocate() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        var circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });
        autocomplete.setBounds(circle.getBounds());
      });
    }
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCpmCSerVJ7bljhpaAdVGdM4kJbRRa0_g4&libraries=places&callback=initAutocomplete"
        async defer></script>
</body>
</html>